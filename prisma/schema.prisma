generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Article {
  id          Int       @id @default(autoincrement())
  poids       Int?
  designation String    @unique
  published   Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  commande    Commande? @relation(fields: [commandeId], references: [id])
  commandeId  Int?
}

model User {
  id        Int      @id @default(autoincrement())
  nom       String?
  prenoms   String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Truck {
  id        Int        @id @default(autoincrement())
  marque    String?
  poids     Int?
  type      String // Must be an enum where all type on truck are listed
  matricule String     @unique
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  commandes Commande[]
}

model Driver {
  id        Int      @id @default(autoincrement())
  nom       String?
  prenoms   String?
  cni       String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Commande {
  id         Int         @id @default(autoincrement())
  noCmd      String      @unique
  site       Site        @relation(fields: [siteId], references: [id])
  siteId     Int
  articles   Article[]
  receptions Reception[]
  camion     Truck?      @relation(fields: [camionId], references: [id])
  camionId   Int?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Site {
  id        Int        @id @default(autoincrement())
  code      Int        @unique
  libelle   String
  commandes Commande[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Reception {
  id         Int       @id @default(autoincrement())
  code       String    @unique
  Commande   Commande? @relation(fields: [commandeId], references: [id])
  commandeId Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
