// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Article {
  id          Int      @id @default(autoincrement())
  title       String   @unique
  description String?
  body        String
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
<<<<<<< HEAD
  author      User?    @relation(fields: [authorId], references: [id])
  authorId    Int?
}

model User {
  id        Int       @id @default(autoincrement())
  nom       String?
  prenoms   String?
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  articles  Article[]
}

// model User {
//   id        Int      @id(map: "PK_User") @default(autoincrement())
//   nom       String
//   prenoms   String?
//   email     String   @unique()
//   password  String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   role      String?
//   salt      String
// }

model Site {
  Cod_Sit     Int           @id(map: "PK_Site")
  Lib_Sit     String?       @db.VarChar(35)
  Cod_Con     String        @db.NChar(2)
  ConceptSite ConceptSite[]
  Encours     Encours[]
  Concepte    Concepte      @relation(fields: [Cod_Con], references: [Cod_Con], onUpdate: NoAction, map: "FK_Site_Concepte")
  Stock       Stock[]
}

model Concepte {
  Cod_Con          String             @id(map: "PK_Concepte") @db.NChar(2)
  Lib_Con          String?            @db.NVarChar(50)
  ConceptSite      ConceptSite[]
  Encours          Encours[]
  Encours_pivot    Encours_pivot[]
  Plafond          Plafond[]
  Plafond_pivot    Plafond_pivot[]
  Rayconce         Rayconce[]
  Reception_pivot  Reception_pivot[]
  Site             Site[]
  Stock_pivot      Stock_pivot[]
  StockPrevu_pivot StockPrevu_pivot[]
}

model Encours {
  Annee    Int
  Cod_Per  Int
  Dat_Com  DateTime @db.Date
  Cod_Sit  Int      @unique
  Cod_Ray  Int
  Cod_Con  String   @db.NChar(2)
  Mon_Com  Decimal? @db.Decimal(18, 3)
  Concepte Concepte @relation(fields: [Cod_Con], references: [Cod_Con], onUpdate: NoAction, map: "FK_Encours_Concepte")
  Rayon    Rayon    @relation(fields: [Cod_Ray], references: [Cod_Ray], onUpdate: NoAction, map: "FK_Encours_Rayon")
  Site     Site     @relation(fields: [Cod_Sit], references: [Cod_Sit], onUpdate: NoAction, map: "FK_Encours_Site")

  @@id([Dat_Com, Cod_Sit, Cod_Ray, Cod_Con], map: "PK_Encours")
}

model Encours_Detail {
  Dat_Com DateTime @db.DateTime
  Cod_Sit Float
  Num_Com Float
  Cod_Ray Float?
  Lib_Ray String?  @db.NVarChar(255)
  Cod_Int Float
  Des_Art String?  @db.NVarChar(255)
  Qte_Enc Float?
  Pri_Ach Float?
  Mon_Ach Decimal  @db.Decimal(18, 3)

  @@id([Dat_Com, Cod_Sit, Num_Com, Cod_Int], map: "PK_Encours_Detail")
}

model Exercice {
  Annee Int @id(map: "PK_Exercice")
}

model Gerer {
  Cod_Ray Int
  Cod_Tra Int
  Rayon   Rayon  @relation(fields: [Cod_Ray], references: [Cod_Ray], onUpdate: NoAction, map: "FK_Gerer_Rayon")
  Trader  Trader @relation(fields: [Cod_Tra], references: [Cod_Tra], onUpdate: NoAction, map: "FK_Gerer_Trader")

  @@id([Cod_Ray, Cod_Tra], map: "PK_Gerer")
}

model Login {
  ID_Use    Int    @id(map: "PK_Login")
  User_Mail String @db.VarChar(64)
  Password  String @db.VarChar(32)
  Users     Users  @relation(fields: [ID_Use], references: [ID_Use], onUpdate: NoAction, map: "FK_Login_Users")
}

model Periode {
  Cod_Per Int       @id(map: "PK_Periode")
  Lib_Per String?   @db.NChar(10)
  Plafond Plafond[]
}

model Plafond {
  ID_Plaf  Int      @id(map: "PK_Plafond") @default(autoincrement())
  Annee    Int
  Cod_Per  Int
  Cod_Ray  Int
  Cod_Con  String   @db.NChar(2)
  Mon_Pla  Decimal? @db.Decimal(18, 2)
  Concepte Concepte @relation(fields: [Cod_Con], references: [Cod_Con], onUpdate: NoAction, map: "FK_Plafond_Concepte")
  Periode  Periode  @relation(fields: [Cod_Per], references: [Cod_Per], onUpdate: NoAction, map: "FK_Plafond_Periode")
  Rayon    Rayon    @relation(fields: [Cod_Ray], references: [Cod_Ray], onUpdate: NoAction, map: "FK_Plafond_Rayon")
}

model Rayon {
  Cod_Ray          Int                @id(map: "PK_Rayon")
  Lib_Ray          String?            @db.VarChar(50)
  Encours          Encours[]
  Encours_pivot    Encours_pivot[]
  Gerer            Gerer[]
  Plafond          Plafond[]
  Plafond_pivot    Plafond_pivot[]
  Rayconce         Rayconce[]
  Reception        Reception[]
  Reception_pivot  Reception_pivot[]
  Stock            Stock[]
  Stock_pivot      Stock_pivot[]
  StockPrevu_pivot StockPrevu_pivot[]
}

model Reception {
  Dat_Rec DateTime @db.Date
  Cod_Sit Int
  Cod_Ray Int
  Mon_Rec Decimal? @db.Decimal(18, 3)
  Rayon   Rayon    @relation(fields: [Cod_Ray], references: [Cod_Ray], onUpdate: NoAction, map: "FK_Reception_Rayon")

  @@id([Dat_Rec, Cod_Sit, Cod_Ray], map: "PK_Reception")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model Reception_Detail {
  Dat_Rec DateTime? @db.Date
  Cod_Sit Int?
  Ref_BL  String?   @db.NVarChar(30)
  Num_BRV String?   @db.NChar(16)
  Num_Com String?   @db.NVarChar(30)
  Cod_Ray Int?
  Con_Int Int?
  Des_Art String?   @db.NVarChar(65)
  Qte_Rec Decimal?  @db.Decimal(18, 3)
  Pri_Net Decimal?  @db.Decimal(18, 3)
  Mon_Lig Decimal?  @db.Decimal(18, 3)

  @@ignore
}

model Stock {
  Dat_Sto DateTime @db.Date
  Cod_Sit Int
  Cod_Ray Int
  Val_Sto Decimal? @db.Decimal(18, 3)
  Rayon   Rayon    @relation(fields: [Cod_Ray], references: [Cod_Ray], onUpdate: NoAction, map: "FK_Stock_Rayon")
  Site    Site     @relation(fields: [Cod_Sit], references: [Cod_Sit], onUpdate: NoAction, map: "FK_Stock_Site")

  @@id([Dat_Sto, Cod_Sit, Cod_Ray], map: "PK_Stock")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model Stock_Detail {
  Dat_Sto   DateTime @db.Date
  Cod_Sit   Int
  Cod_Ray   Int?
  Cod_Int   Int
  Des_Art   String?  @db.NVarChar(65)
  Val_PxAch Decimal? @db.Decimal(18, 3)
  Qte_Sto   Decimal? @db.Decimal(18, 3)
  Val_Sto   Decimal? @db.Decimal(18, 3)

  @@id([Dat_Sto, Cod_Sit, Cod_Int], map: "PK_Stock_Detail")
  @@ignore
}

model sysdiagrams {
  name         String @db.NVarChar(128)
  principal_id Int
  diagram_id   Int    @id(map: "PK__sysdiagr__C2B05B613C5F2491") @default(autoincrement())
  version      Int?
  definition   Bytes?

  @@unique([principal_id, name], map: "UK_principal_name")
}

model Trader {
  Cod_Tra Int     @id(map: "PK_Trader")
  Non_Pre String? @db.VarChar(50)
  Gerer   Gerer[]
}

model Users {
  ID_Use    Int      @id(map: "PK_Users")
  Use_Nom   String?  @db.VarChar(35)
  Use_Pre   String?  @db.VarChar(35)
  ID_UseTyp Int
  Use_Fon   String   @db.VarChar(50)
  Login     Login?
  Usertype  Usertype @relation(fields: [ID_UseTyp], references: [ID_UseTyp], onUpdate: NoAction, map: "FK_Users_Usertype")
}

model Usertype {
  ID_UseTyp Int     @id(map: "PK_Usertype")
  Lib_Typ   String? @db.VarChar(35)
  Users     Users[]
}

model ConceptSite {
  ID_ConSit Int      @default(autoincrement())
  Cod_Con   String   @db.NChar(2)
  Cod_Sit   Int
  Concepte  Concepte @relation(fields: [Cod_Con], references: [Cod_Con], onUpdate: NoAction, map: "FK_ConceptSite_Concepte")
  Site      Site     @relation(fields: [Cod_Sit], references: [Cod_Sit], onUpdate: NoAction, map: "FK_ConceptSite_Site")

  @@id([Cod_Con, Cod_Sit], map: "PK_ConceptSite")
}

model Encours_pivot {
  Annee    Int
  Cod_Ray  Int
  Cod_Con  String   @db.NChar(2)
  Janv     Decimal? @db.Decimal(18, 3)
  Fevr     Decimal? @db.Decimal(18, 3)
  Mars     Decimal? @db.Decimal(18, 3)
  Avril    Decimal? @db.Decimal(18, 3)
  Mai      Decimal? @db.Decimal(18, 3)
  Juin     Decimal? @db.Decimal(18, 3)
  Juil     Decimal? @db.Decimal(18, 3)
  aout     Decimal? @db.Decimal(18, 3)
  Sept     Decimal? @db.Decimal(18, 3)
  Octo     Decimal? @db.Decimal(18, 3)
  Nove     Decimal? @db.Decimal(18, 3)
  Dece     Decimal? @db.Decimal(18, 3)
  Concepte Concepte @relation(fields: [Cod_Con], references: [Cod_Con], onUpdate: NoAction, map: "FK_Encours_pivot_Concepte")
  Rayon    Rayon    @relation(fields: [Cod_Ray], references: [Cod_Ray], onUpdate: NoAction, map: "FK_Encours_pivot_Rayon")

  @@id([Annee, Cod_Ray, Cod_Con], map: "PK_Encours_pivot")
}

model PerConce {
  ID_PerCon Int    @default(autoincrement())
  Cod_Per   Int
  Cod_Con   String @db.NChar(2)
  Annee     Int

  @@id([Cod_Per, Cod_Con, Annee], map: "PK_PerConce")
}

model Plafond_pivot {
  Annee    Int
  Cod_Ray  Int
  Cod_Con  String   @db.NChar(2)
  Janv     Decimal? @db.Decimal(18, 3)
  Fevr     Decimal? @db.Decimal(18, 3)
  Mars     Decimal? @db.Decimal(18, 3)
  Avril    Decimal? @db.Decimal(18, 3)
  Mai      Decimal? @db.Decimal(18, 3)
  Juin     Decimal? @db.Decimal(18, 3)
  Juil     Decimal? @db.Decimal(18, 3)
  aout     Decimal? @db.Decimal(18, 3)
  Sept     Decimal? @db.Decimal(18, 3)
  Octo     Decimal? @db.Decimal(18, 3)
  Nove     Decimal? @db.Decimal(18, 3)
  Dece     Decimal? @db.Decimal(18, 3)
  Concepte Concepte @relation(fields: [Cod_Con], references: [Cod_Con], onUpdate: NoAction, map: "FK_Plafond_pivot_Concepte")
  Rayon    Rayon    @relation(fields: [Cod_Ray], references: [Cod_Ray], onUpdate: NoAction, map: "FK_Plafond_pivot_Rayon")

  @@id([Annee, Cod_Ray, Cod_Con], map: "PK_Plafond_pivot_1")
}

model Rayconce {
  Cod_Ray  Int
  Cod_Con  String   @db.NChar(2)
  Concepte Concepte @relation(fields: [Cod_Con], references: [Cod_Con], onUpdate: NoAction, map: "FK_Rayconce_Concepte")
  Rayon    Rayon    @relation(fields: [Cod_Ray], references: [Cod_Ray], onUpdate: NoAction, map: "FK_Rayconce_Rayon")

  @@id([Cod_Ray, Cod_Con], map: "PK_Rayconce")
}

model Reception_pivot {
  Annee    Int
  Cod_Ray  Int
  Cod_Con  String   @db.NChar(2)
  Janv     Decimal? @db.Decimal(18, 3)
  Fevr     Decimal? @db.Decimal(18, 3)
  Mars     Decimal? @db.Decimal(18, 3)
  Avril    Decimal? @db.Decimal(18, 3)
  Mai      Decimal? @db.Decimal(18, 3)
  Juin     Decimal? @db.Decimal(18, 3)
  Juil     Decimal? @db.Decimal(18, 3)
  aout     Decimal? @db.Decimal(18, 3)
  Sept     Decimal? @db.Decimal(18, 3)
  Octo     Decimal? @db.Decimal(18, 3)
  Nove     Decimal? @db.Decimal(18, 3)
  Dece     Decimal? @db.Decimal(18, 3)
  Concepte Concepte @relation(fields: [Cod_Con], references: [Cod_Con], onUpdate: NoAction, map: "FK_Reception_pivot_Concepte")
  Rayon    Rayon    @relation(fields: [Cod_Ray], references: [Cod_Ray], onUpdate: NoAction, map: "FK_Reception_pivot_Rayon")

  @@id([Annee, Cod_Ray, Cod_Con], map: "PK_Reception_pivot")
}

model Stock_pivot {
  Annee    Int
  Cod_Ray  Int
  Cod_Con  String   @db.NChar(2)
  Janv     Decimal? @db.Decimal(18, 3)
  Fevr     Decimal? @db.Decimal(18, 3)
  Mars     Decimal? @db.Decimal(18, 3)
  Avril    Decimal? @db.Decimal(18, 3)
  Mai      Decimal? @db.Decimal(18, 3)
  Juin     Decimal? @db.Decimal(18, 3)
  Juil     Decimal? @db.Decimal(18, 3)
  aout     Decimal? @db.Decimal(18, 3)
  Sept     Decimal? @db.Decimal(18, 3)
  Octo     Decimal? @db.Decimal(18, 3)
  Nove     Decimal? @db.Decimal(18, 3)
  Dece     Decimal? @db.Decimal(18, 3)
  Concepte Concepte @relation(fields: [Cod_Con], references: [Cod_Con], onUpdate: NoAction, map: "FK_Stock_pivot_Concepte")
  Rayon    Rayon    @relation(fields: [Cod_Ray], references: [Cod_Ray], onUpdate: NoAction, map: "FK_Stock_pivot_Rayon")

  @@id([Annee, Cod_Ray, Cod_Con], map: "PK_Stock_pivot")
}

model StockPrevu {
  ID_StkPre  Int      @id(map: "PK_StockPrevu") @default(autoincrement())
  Annee      Int
  Cod_Per    Int
  Cod_Ray    Int
  Cod_Con    String   @db.NChar(2)
  StkPre_Val Decimal? @db.Decimal(18, 3)
}

model StockPrevu_pivot {
  Annee    Int
  Cod_Ray  Int
  Cod_Con  String   @db.NChar(2)
  Janv     Decimal? @db.Decimal(18, 3)
  Fevr     Decimal? @db.Decimal(18, 3)
  Mars     Decimal? @db.Decimal(18, 3)
  Avril    Decimal? @db.Decimal(18, 3)
  Mai      Decimal? @db.Decimal(18, 3)
  Juin     Decimal? @db.Decimal(18, 3)
  Juil     Decimal? @db.Decimal(18, 3)
  aout     Decimal? @db.Decimal(18, 3)
  Sept     Decimal? @db.Decimal(18, 3)
  Octo     Decimal? @db.Decimal(18, 3)
  Nove     Decimal? @db.Decimal(18, 3)
  Dece     Decimal? @db.Decimal(18, 3)
  Concepte Concepte @relation(fields: [Cod_Con], references: [Cod_Con], onUpdate: NoAction, map: "FK_StockPrevu_pivot_Concepte")
  Rayon    Rayon    @relation(fields: [Cod_Ray], references: [Cod_Ray], onUpdate: NoAction, map: "FK_StockPrevu_pivot_Rayon")

  @@id([Annee, Cod_Ray, Cod_Con], map: "PK_StockPrevu_pivot")
=======
>>>>>>> 228b7c5 (feat: config finish)
}
